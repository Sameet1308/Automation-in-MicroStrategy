Hi Team,

Just wanted to clarify the purpose behind the dashboard cache update subscriptions I had set up.

These subscriptions are strictly at the dashboard level — they don’t touch the underlying datasets, cubes, or reports. Their job is to pre-generate the dashboard’s visual layout and page-level cache to help improve the load time and navigation experience for users, especially during peak hours.

That said, I understand there’s a concern about whether these subscriptions could be causing slowness on the front end. From what I’ve reviewed in the MicroStrategy documentation, these cache updates are designed to run in the background. But yes, if a user happens to open the dashboard exactly when the cache is being updated, it’s possible they might temporarily miss the cache and the server ends up re-rendering things live — which can feel slow.

However, just to highlight — this slowness has always been there, even before we introduced these subscriptions. In fact, we added them with the intention to reduce the load time and improve user experience, not worsen it.

That said, it may be worth taking a quick look at the server-side activity during the reported time windows. Since this MicroStrategy server is shared across multiple projects, there could be other jobs or subscriptions running in parallel. A few things that might help us identify any bottlenecks:
	•	Overall CPU and memory usage on the Intelligence Server
	•	Number of concurrent jobs or dashboard executions at that time
	•	Any queue build-up or delayed job execution
	•	Whether the cache working set limits are being hit (leading to eviction of active page caches)
	•	Any signs of thread contention or long-running processes

Even just getting a general view of server load during that window could help us narrow it down.

Happy to work with you on timing adjustments or a test window if needed. Appreciate the help!

Thanks,
Sameet
